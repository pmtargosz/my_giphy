const version="1.0",appAssets=["index.html","js/main.js","css/main.css","images/flame.svg","images/logo.svg","images/sync.svg","vendor/bootstrap.min.css"];self.addEventListener("install",a=>{a.waitUntil((async()=>{return(await caches.open("static-1.0")).addAll(appAssets)})()),console.log("Install SW and cached static assets.")}),self.addEventListener("activate",a=>{a.waitUntil((async()=>{(await caches.keys()).map(a=>"static-1.0"!==a&&a.match("static-")?caches.delete(a):null)})()),console.log("Activate SW and clean static assets cache.")});const staticCache=async(a,t="static-1.0")=>{const e=await caches.match(a.request);if(e)return e;const s=fetch(a.request),c=s.then(a=>a.clone());return a.waitUntil(async function(){const e=await caches.open(t);await e.put(a.request,await c)}()),s},fallbackCache=async a=>{try{const t=fetch(a.request),e=t.then(a=>a.clone()),s=await caches.open("static-1.0");return await s.put(a.request,await e),t}catch(t){return console.error(t),await caches.match(a.request)}},cleanGiphyCache=async a=>{const t=await caches.open("giphy");(await t.keys()).map(e=>!a.includes(e.url)&&t.delete(e))};self.addEventListener("fetch",a=>{a.request.url.match(location.origin)&&a.respondWith(staticCache(a)),a.request.url.match("api.giphy.com/v1/gifs/trending")&&a.respondWith(fallbackCache(a)),a.request.url.match("giphy.com/media")&&a.respondWith(staticCache(a,"giphy"))}),self.addEventListener("message",a=>{"cleanGiphyCache"===a.data.action&&cleanGiphyCache(a.data.giphys)});